# 수 정렬하기 3
# 브론즈1

import sys

n = int(sys.stdin.readline())  # N(1 ≤ N ≤ 1,000,000)
arr = [0] * 10001 # 0 <= A[i] <= 10000

for _ in range(n):
    arr[int(sys.stdin.readline())] += 1

for i in range(10001):
    if arr[i] > 0:
        for _ in range(arr[i]):
            print(i)
# 시간복잡도: O(N + K) (N: 입력의 개수, K: 정렬할 수의 범위)
# 공간복잡도: O(K) (K: 정렬할 수의 범위)
# 이 코드는 입력된 수를 카운트하여 정렬하는 방식으로, 시간복잡도가 O(N + K)로 효율적이다.
# 입력의 범위가 작기 때문에 카운팅 정렬을 사용하여 O(N + K) 시간복잡도로 해결할 수 있다.
# 이 방법은 입력의 범위가 제한된 경우에 매우 효과적이다.
# 카운팅 정렬은 입력의 범위가 작을 때 매우 효율적인 정렬 알고리즘이다.
# 이 문제에서는 입력의 범위가 0부터 10000까지이므로 카운팅 정렬을 사용하여 O(N + K) 시간복잡도로 해결할 수 있다.
# 따라서 이 코드는 시간복잡도와 공간복잡도 모두 효율적이다.